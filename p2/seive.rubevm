# Matthew Jones
# prime.rubevm - Compute all primes from 1 to n

print_tab:
  const r12, 2
  const r14, ", "
  call r4, 12, 12
  const r12, 3
  rd_tab r13, r11, r12
  if_zero r13, 2
  call r3, 14, 14
  call r4, 12, 12
  add r13, r1, r12
  mov r12, r13
  eq r13, r12, r7
  if_zero r13, -8
  ret r0

scanfactor:
  mov r9, r0
  add r12, r9, r0
  mov r9, r12
  lt r12, r7, r9
  if_zero r12, 1
  ret r0
  wr_tab r11, r9, r2
  jmp -7

main:
# initialize array
  mk_tab r0
# set constant for upper bound (n)
  const r1, 10000
  mov r8, r1
  const r2, 1
  const r3, 0
  if_zero r1, 4
  wr_tab r0, r1, r2
  sub r4, r1, r2
  mov r1, r4
  jmp -5
  const r1, 2
  wr_tab r0, r1, r2
  wr_tab r0, r2, r3
  const r4, print_string
  const r5, print_int
  const r6, "Initialized\n"
  const r7, "\n"
  call r4, 6, 6
  const r10, 0
# print Initialized
  mov r12, r0
# r12 has the tab, r8 has the max
  rd_tab r9, r12, r1
  if_zero r9, 2
  const r11, scanfactor
  call r11, 1, 12
  add r13, r1, r2
  mov r1, r13
  leq r14, r1, r8
  if_zero r14, 1
  jmp -9
  const r14, print_tab
  const r15, "Primes:\n"
  call r4, 15, 15
  call r14, 1, 12
  call r4, 7, 7
  const r16, "Finished!\n"
  call r4, 16, 16
  ret r8
