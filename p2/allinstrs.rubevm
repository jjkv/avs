
foo:
  const r9, print_int
  const r8, 125
  sub r2, r2, r8
  call r9, 2, 2
  const r8, 1
  add r1, r1, r8
  call r9, 1, 1
  add r0, r0, r8
  call r9, 0, 0
  ret r2

main:
  const r0, 63
  mov   r1, r0
  add   r1, r0, r1
  sub   r2, r1, r0
  mul   r2, r2, r2
  div   r2, r2, r0
  eq    r3, r2, r1
  const r4, 1
  lt    r4, r3, r4
  const r5, 0
  leq   r5, r5, r4
  const r6, "foo"
  is_int r6, r6
  is_str r7, r6
  mk_tab r8
  mov    r9, r8
  mov    r8, r7
  is_tab r4, r8
  jmp 1
  jmp 1
  jmp -2
  if_zero r4, 2
  const r4, concat
  call r4, 0, 1024
  if_zero r8, 2
  const r4, length
  call r4, 0, 32
  wr_glob bar, r6
  rd_glob r10, bar
  eq r11, r10, r6
  const r12, print_int
  call r12, 11, 11

  wr_tab  r9, r6, r6
  has_tab r13, r9, r6
  call r12, 13, 13
  rd_tab  r14, r9, r6
  add     r6, r6, r5
  call r12, 6, 6

  const r0, "1"
  const r12, print_string
  call  r12, 0, 0

# iter(r9, `L_Id foo, 0)
  const r14, foo
  mov r20, r9
  mov r21, r14
  mov r22, r1
  const r23, iter
  call r23, 20, 22

# (to_s(`L_Id "to_s") == "Function<to_s>") = 1
  const r24, foo
  const r24, to_s
  call  r24, 24, 24
  const r25, "Function<to_s>"
  eq    r8, r24, r25
  const r12, print_int
  call  r12, 8, 8

# ("Function<to_s>Function<to_s>" == "Function<to_s>Function<to_s>") = 1
  const r24, concat
  mov   r26, r25
  call  r24, 25, 26
  const r27, "Function<to_s>Function<to_s>"
  eq    r8, r25, r27
  call  r12, 8, 8

# length("Function<to_s>Function<to_s>") - 27 = 1
  const r28, 27
  const r24, length
  call r24, 27, 27
  sub  r27, r27, r28
  call r12, 27, 27

# to_i("-1331") + 1332 = 1
  const r24, to_i
  const r0,  "-1331"
  const r1,  1332
  call  r24, 0, 0
  add   r0, r0, r1
  call  r12, 0, 0

# size(r9) = 1
  const r8, size
  call r8, 9, 9
  call r12, 9, 9

  ret r11

